/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user_interface;

import business_model.Fleet;
import business_model.Vehicle;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author merwinroy
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    
    //Japenl object of right splitPane to add a CreateJPanel layout
    private final JPanel controlPanel;
    
    //Fleet object
    private final Fleet fleet;
    
    //Constructor of CreateJPanel parameterized with Jpanel and Fleet object arguments
    public CreateJPanel(JPanel controlPanel, Fleet fleet) {
        initComponents();
        //Fleet object
        this.fleet = fleet;
        
        //JPanel Object referring to controlPanel(rightSplitPane)
        this.controlPanel = controlPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupAvail = new javax.swing.ButtonGroup();
        buttonGroupCertificate = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        lblManufacturer = new javax.swing.JLabel();
        txtManufacturer = new javax.swing.JTextField();
        lblModel = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        lblYearOfManufacture = new javax.swing.JLabel();
        txtYearOfManufacture = new javax.swing.JTextField();
        lblSerial = new javax.swing.JLabel();
        txtSerial = new javax.swing.JTextField();
        lblMinSeats = new javax.swing.JLabel();
        txtMinSeats = new javax.swing.JTextField();
        txtMaxSeats = new javax.swing.JTextField();
        lblMaxSeats = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblCertificate = new javax.swing.JLabel();
        lblAvail = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        rbYesAvail = new javax.swing.JRadioButton();
        rbNoAvail = new javax.swing.JRadioButton();
        rbYesCertificate = new javax.swing.JRadioButton();
        rbNoCertificate = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(204, 204, 255));

        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("ADD VEHICLE INTO THE SYSTEM");
        lblTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255), 3));

        lblManufacturer.setText("Manufacturer:");

        lblModel.setText("Model:");

        lblYearOfManufacture.setText("Manufacturing Year:");

        lblSerial.setText("Serial Number:");

        lblMinSeats.setText("Minimum number of seats:");

        lblMaxSeats.setText("Maximum number of seats:");

        lblCity.setText("City:");

        lblCertificate.setText("Maintainance certificate:");

        lblAvail.setText("Availability:");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        buttonGroupAvail.add(rbYesAvail);
        rbYesAvail.setText("Yes");
        rbYesAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbYesAvailActionPerformed(evt);
            }
        });

        buttonGroupAvail.add(rbNoAvail);
        rbNoAvail.setText("No");

        buttonGroupCertificate.add(rbYesCertificate);
        rbYesCertificate.setText("Yes");

        buttonGroupCertificate.add(rbNoCertificate);
        rbNoCertificate.setText("No");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaxSeats)
                            .addComponent(lblCity)
                            .addComponent(lblAvail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(rbYesAvail)
                                    .addGap(18, 18, 18)
                                    .addComponent(rbNoAvail)))
                            .addComponent(txtMaxSeats, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBack)
                            .addComponent(lblCertificate))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAdd))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(rbYesCertificate)
                                .addGap(18, 18, 18)
                                .addComponent(rbNoCertificate)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblManufacturer)
                            .addComponent(lblModel)
                            .addComponent(lblYearOfManufacture)
                            .addComponent(lblSerial)
                            .addComponent(lblMinSeats))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtModel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtManufacturer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtYearOfManufacture, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSerial, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMinSeats, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(131, 131, 131))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufacturer)
                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModel)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYearOfManufacture)
                    .addComponent(txtYearOfManufacture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerial)
                    .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMinSeats)
                    .addComponent(txtMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxSeats)
                    .addComponent(txtMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAvail)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbYesAvail)
                        .addComponent(rbNoAvail)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCertificate)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbYesCertificate)
                        .addComponent(rbNoCertificate)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnAdd))
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rbYesAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbYesAvailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbYesAvailActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        //Current layout is removed when back button is clicked
        controlPanel.remove(this);
        //Previous layout is loaded when back button is clicked
        CardLayout cardLayout = (CardLayout) controlPanel.getLayout();
        //Previous layout
        cardLayout.previous(controlPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        //Information added to system when add button is clicked after entereing required details
        String manufacturer = "";
        String model = "";
        String city = "";
        
        //Condition to check if textfields are empty or not (Validation)
        if(txtManufacturer.getText().equals("") || txtModel.getText().equals("") || txtCity.getText().equals(""))
            
        {
            
            JOptionPane.showMessageDialog(null, "Empty Field Entries are not permitted!");
            
        }
        
        else
            
        {
   
            manufacturer = txtManufacturer.getText();
            model = txtModel.getText();
            city = txtCity.getText();
            
        }
        
        try
        {
            //Setting data members values entered into textfields
            int yearOfManufacture = Integer.parseInt(txtYearOfManufacture.getText());
            
            int serialNum = Integer.parseInt(txtSerial.getText());
            
            int minSeats = Integer.parseInt(txtMinSeats.getText());
            
            int maxSeats = Integer.parseInt(txtMaxSeats.getText());
            
            if(buttonGroupAvail.getSelection() == null || buttonGroupCertificate.getSelection() == null)
                
            {
                //Validation to check radiobutton options are selected
                JOptionPane.showMessageDialog(null, "It is mandatory to choose an option (availability/Maintainance certificate) in order to continue!");
            }
            
            else
            {
                //attributes of vehicle object set based on inputs of textfields by user
                Vehicle vehicle = fleet.addVehicle();
                
                vehicle.setManufacturer(manufacturer);
                
                vehicle.setYearOfManufacture(yearOfManufacture);
                
                vehicle.setModel(model);
                
                vehicle.setSerial(serialNum);
                
                vehicle.setMax_num_seats(maxSeats);
                
                vehicle.setMin_num_seats(minSeats);
                
                vehicle.setCity(city);  
                
                //yes radiobutton for availability of vehicle is selected
                if(rbYesAvail.isSelected())
                {
                    //availability set to true
                    vehicle.setAvail(true);
                }
                //no radiobutton for availability of vehicle is selected
                else if(rbNoAvail.isSelected())
                {
                    //availability set to false
                    vehicle.setAvail(false);
                }
                
                //yes radiobutton for maintainance certificate of vehicle is selected
                if(rbYesCertificate.isSelected())
                {
                    //maintainance certification set to true
                    vehicle.setCertificate(true);
                }
                //no radiobutton for maintainance certificate of vehicle is selected
                else if(rbNoCertificate.isSelected())
                {
                    //maintainance certification set to false
                    vehicle.setCertificate(false);
                }
                //Prompt of successful creation and addition of vehicle object
                JOptionPane.showMessageDialog(null, "Vehicle has been added into the system successfully");
            }
        }
        catch(NumberFormatException n)
        {   //Numeric Format error (For validation) will lead to a prompt
            JOptionPane.showMessageDialog(null,"Invalid Numeric Entry");
        }
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.ButtonGroup buttonGroupAvail;
    private javax.swing.ButtonGroup buttonGroupCertificate;
    private javax.swing.JLabel lblAvail;
    private javax.swing.JLabel lblCertificate;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblManufacturer;
    private javax.swing.JLabel lblMaxSeats;
    private javax.swing.JLabel lblMinSeats;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblSerial;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblYearOfManufacture;
    private javax.swing.JRadioButton rbNoAvail;
    private javax.swing.JRadioButton rbNoCertificate;
    private javax.swing.JRadioButton rbYesAvail;
    private javax.swing.JRadioButton rbYesCertificate;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtMaxSeats;
    private javax.swing.JTextField txtMinSeats;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtSerial;
    private javax.swing.JTextField txtYearOfManufacture;
    // End of variables declaration//GEN-END:variables
}
