/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManRole;

//import Ecosystem
import Business.EcoSystem;

//import organization
import Business.Organization;

//import company
import Business.Company.Company;

//Import userAccount
import Business.UserAccount.UserAccount;

//import order
import Business.Order;


//Import JOptionPane
import javax.swing.JOptionPane;

//import JPanel
import javax.swing.JPanel;

//import TableModel
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author merwinroy
 */

public class DeliveryManWorkAreaJPanel extends javax.swing.JPanel 
{

    //JPanel container object
    private JPanel container;
    
    //account object
    private UserAccount account;
    
    //Ecosystem object
    private EcoSystem ecoSystem;
    
  
    public DeliveryManWorkAreaJPanel(JPanel container, UserAccount account, Organization organization, Company company, EcoSystem ecoSystem) 
    {
        //Initialize components
        initComponents();
        
        
        
        this.container = container;
        
        this.account = account;
        
        this.ecoSystem = ecoSystem;
      
        populateTable();
    }
    
    public void populateTable()
    {
        //Table model object created
        DefaultTableModel tableModel = (DefaultTableModel) tblDelivery.getModel();
        //Row count of model set to 0
        tableModel.setRowCount(0);
        
        //For loop to iterate through all orders in list
        for(Order order:ecoSystem.getOrderDir().getOrderList()) 
        {
            if(order.getDeliveryPersonName()!=null && order.getDeliveryPersonName().equals(account.getEmployee().getName()))
            {
                Object row[] = new Object[6];
                
                row[0] = order;
                
                row[1] = order.getCustomerID();
                
                row[2] = order.getCustomerName();
                
                row[3] = order.getNotes();
                
                row[4] = order.getOrderStatus();
                
                row[5] = order.getResName();
                
                //Row added on model after every iteration
                tableModel.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDeliveredStatus = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDelivery = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        lblRefresh = new javax.swing.JLabel();
        lblDeliveryStatus = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDeliveredStatus.setText("Order Delivered");
        btnDeliveredStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliveredStatusActionPerformed(evt);
            }
        });
        add(btnDeliveredStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 140, -1));

        tblDelivery.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order Id", "Customer Id", "Customer Name", "Message from customer", "Status", "Restaurant Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDelivery);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 790, 96));

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("DELIVERY AGENT PANEL");
        lblTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255), 3));
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 20, 790, -1));

        lblRefresh.setText("<-Refresh Table");
        add(lblRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 110, 30));

        lblDeliveryStatus.setText("<-Select Option to set delivery status of order");
        add(lblDeliveryStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeliveredStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliveredStatusActionPerformed
        
        //Selected row in table 
        int selectedRow = tblDelivery.getSelectedRow();
        
        //Check if row is selected 
        if (selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select a row from table to proceed!");
            return;
        }
        
        //Selected order from table row
        Order selectedOrder = (Order)tblDelivery.getValueAt(selectedRow, 0);
        
        //set order status to delivered
        selectedOrder.setOrderStatus("delivered");
        
        //Prompt user that order is delivered successfully
        JOptionPane.showMessageDialog(null, "The order has been delivered successfully");
        
    }//GEN-LAST:event_btnDeliveredStatusActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeliveredStatus;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDeliveryStatus;
    private javax.swing.JLabel lblRefresh;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblDelivery;
    // End of variables declaration//GEN-END:variables
}
