/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.File;
import java.time.format.DateTimeFormatter;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.util.regex.*;
import person.Person;

/**
 *
 * @author merwinroy
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    
    Person new_profile;
    
    public CreateJPanel(Person new_profile) {
        initComponents();
        
        this.new_profile = new_profile;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNameError4 = new javax.swing.JLabel();
        lblCreateTitle = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAddr = new javax.swing.JLabel();
        txtAddr = new javax.swing.JTextField();
        lblDob = new javax.swing.JLabel();
        txtDob = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        lblFax = new javax.swing.JLabel();
        txtFax = new javax.swing.JTextField();
        lblMail = new javax.swing.JLabel();
        txtMail = new javax.swing.JTextField();
        lblSSN = new javax.swing.JLabel();
        txtSSN = new javax.swing.JTextField();
        lblMedicalRecord = new javax.swing.JLabel();
        txtMedicalRecord = new javax.swing.JTextField();
        lblHealthPlan = new javax.swing.JLabel();
        txtHealthPlan = new javax.swing.JTextField();
        lblBank = new javax.swing.JLabel();
        txtBank = new javax.swing.JTextField();
        lblLicenseNo = new javax.swing.JLabel();
        txtLicenseNo = new javax.swing.JTextField();
        lblVehicleModel = new javax.swing.JLabel();
        txtVehicleModel = new javax.swing.JTextField();
        lblVehicleLicense = new javax.swing.JLabel();
        txtVehicleLicense = new javax.swing.JTextField();
        lblDeviceModel = new javax.swing.JLabel();
        txtDeviceModel = new javax.swing.JTextField();
        lblDeviceNo = new javax.swing.JLabel();
        txtDeviceNo = new javax.swing.JTextField();
        lblLinkedIn = new javax.swing.JLabel();
        txtLinkedIn = new javax.swing.JTextField();
        lblIP = new javax.swing.JLabel();
        txtIP = new javax.swing.JTextField();
        lblCode = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblCode1 = new javax.swing.JLabel();
        btnUpload = new javax.swing.JButton();
        lblLName = new javax.swing.JLabel();
        txtLName = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblZip = new javax.swing.JLabel();
        txtZip = new javax.swing.JTextField();
        lblState = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCountry = new javax.swing.JTextField();
        lblPath = new javax.swing.JLabel();
        lblNameError = new javax.swing.JLabel();
        lblLNameError = new javax.swing.JLabel();
        lblAgeError = new javax.swing.JLabel();
        lblDobError = new javax.swing.JLabel();
        lblAddrError = new javax.swing.JLabel();
        lblZipError = new javax.swing.JLabel();
        lblCityError = new javax.swing.JLabel();
        lblStateError = new javax.swing.JLabel();
        lblCountryError = new javax.swing.JLabel();
        lblPhoneError = new javax.swing.JLabel();
        lblFaxError = new javax.swing.JLabel();
        lblMailError = new javax.swing.JLabel();
        lblSSNError = new javax.swing.JLabel();
        lblMedicalRecordError = new javax.swing.JLabel();
        lblHealthPlanError = new javax.swing.JLabel();
        lblBankAccError = new javax.swing.JLabel();
        lblLicenseError = new javax.swing.JLabel();
        lblVehicleModelError = new javax.swing.JLabel();
        lblVehicleLicenseError = new javax.swing.JLabel();
        lblDeviceModelError = new javax.swing.JLabel();
        lblDeviceSerialError = new javax.swing.JLabel();
        lblLinkedInError = new javax.swing.JLabel();
        lblIPError = new javax.swing.JLabel();
        lblCodeError = new javax.swing.JLabel();

        lblNameError4.setForeground(new java.awt.Color(204, 0, 51));
        lblNameError4.setText("jLabel1");

        setBackground(new java.awt.Color(204, 204, 255));

        lblCreateTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblCreateTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateTitle.setText("Create Profile");
        lblCreateTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255), 3));

        lblName.setText("First Name:");

        txtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });

        lblAddr.setText("Address Line:");

        txtAddr.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblDob.setText("Date of Birth (mm/dd/yyyy):");

        txtDob.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDob.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDobFocusLost(evt);
            }
        });

        lblPhone.setText("Phone No:");

        txtPhone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPhoneFocusLost(evt);
            }
        });
        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        lblFax.setText("Fax No:");

        txtFax.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtFax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFaxFocusLost(evt);
            }
        });

        lblMail.setText("Email:");

        txtMail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMailFocusLost(evt);
            }
        });

        lblSSN.setText("Social Security Number (SSN):");

        txtSSN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSSN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSSNFocusLost(evt);
            }
        });
        txtSSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSSNActionPerformed(evt);
            }
        });

        lblMedicalRecord.setText("Medical Record Number:");

        txtMedicalRecord.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMedicalRecord.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMedicalRecordFocusLost(evt);
            }
        });

        lblHealthPlan.setText("Health Plan Beneficiary Number:");

        txtHealthPlan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtHealthPlan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHealthPlanFocusLost(evt);
            }
        });

        lblBank.setText("Bank Account Number:");

        txtBank.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtBank.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBankFocusLost(evt);
            }
        });

        lblLicenseNo.setText("Certificate/License Number:");

        txtLicenseNo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtLicenseNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLicenseNoFocusLost(evt);
            }
        });

        lblVehicleModel.setText("Vehicle Model:");

        txtVehicleModel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblVehicleLicense.setText("Vehicle License Number:");

        txtVehicleLicense.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtVehicleLicense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVehicleLicenseActionPerformed(evt);
            }
        });

        lblDeviceModel.setText("Device Model:");

        txtDeviceModel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDeviceModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeviceModelActionPerformed(evt);
            }
        });

        lblDeviceNo.setText("Device Serial Number:");

        txtDeviceNo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDeviceNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDeviceNoFocusLost(evt);
            }
        });
        txtDeviceNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeviceNoActionPerformed(evt);
            }
        });

        lblLinkedIn.setText("LinkedIn Profile:");

        txtLinkedIn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtLinkedIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLinkedInActionPerformed(evt);
            }
        });

        lblIP.setText("IP Address:");

        txtIP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtIP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIPFocusLost(evt);
            }
        });
        txtIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIPActionPerformed(evt);
            }
        });

        lblCode.setText("Identification Code (4-digit):");

        txtCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodeFocusLost(evt);
            }
        });
        txtCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeActionPerformed(evt);
            }
        });

        btnSave.setText("Save Profile");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblCode1.setText("Upload Profile Picture (Biometric):");

        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        lblLName.setText("Last Name:");

        txtLName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtLName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLNameFocusLost(evt);
            }
        });
        txtLName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLNameActionPerformed(evt);
            }
        });

        lblCity.setText("City:");

        txtCity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCityFocusLost(evt);
            }
        });
        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        lblAge.setText("Age:");

        txtAge.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtAge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAgeFocusLost(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel2.setText("Personal Details");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255), 2));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel3.setText("Data");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255), 2));

        lblZip.setText("Zip Code:");

        txtZip.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtZip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtZipFocusLost(evt);
            }
        });

        lblState.setText("State:");

        txtState.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtState.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtStateFocusLost(evt);
            }
        });

        jLabel4.setText("Country:");

        txtCountry.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCountry.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCountryFocusLost(evt);
            }
        });
        txtCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountryActionPerformed(evt);
            }
        });

        lblPath.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        lblPath.setForeground(new java.awt.Color(0, 153, 0));

        lblNameError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblNameError.setForeground(new java.awt.Color(204, 0, 51));

        lblLNameError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblLNameError.setForeground(new java.awt.Color(204, 0, 51));

        lblAgeError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblAgeError.setForeground(new java.awt.Color(204, 0, 51));

        lblDobError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblDobError.setForeground(new java.awt.Color(204, 0, 51));

        lblAddrError.setForeground(new java.awt.Color(204, 0, 51));

        lblZipError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblZipError.setForeground(new java.awt.Color(204, 0, 51));

        lblCityError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblCityError.setForeground(new java.awt.Color(204, 0, 51));

        lblStateError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblStateError.setForeground(new java.awt.Color(204, 0, 51));

        lblCountryError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblCountryError.setForeground(new java.awt.Color(204, 0, 51));

        lblPhoneError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblPhoneError.setForeground(new java.awt.Color(204, 0, 51));

        lblFaxError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblFaxError.setForeground(new java.awt.Color(204, 0, 51));

        lblMailError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblMailError.setForeground(new java.awt.Color(204, 0, 51));

        lblSSNError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblSSNError.setForeground(new java.awt.Color(204, 0, 51));

        lblMedicalRecordError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblMedicalRecordError.setForeground(new java.awt.Color(204, 0, 51));

        lblHealthPlanError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblHealthPlanError.setForeground(new java.awt.Color(204, 0, 51));

        lblBankAccError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblBankAccError.setForeground(new java.awt.Color(204, 0, 51));

        lblLicenseError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblLicenseError.setForeground(new java.awt.Color(204, 0, 51));

        lblVehicleModelError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblVehicleModelError.setForeground(new java.awt.Color(204, 0, 51));

        lblVehicleLicenseError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblVehicleLicenseError.setForeground(new java.awt.Color(204, 0, 51));

        lblDeviceModelError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblDeviceModelError.setForeground(new java.awt.Color(204, 0, 51));

        lblDeviceSerialError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblDeviceSerialError.setForeground(new java.awt.Color(204, 0, 51));

        lblLinkedInError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblLinkedInError.setForeground(new java.awt.Color(204, 0, 51));

        lblIPError.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        lblIPError.setForeground(new java.awt.Color(204, 0, 51));

        lblCodeError.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        lblCodeError.setForeground(new java.awt.Color(204, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCreateTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLinkedInError, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIPError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDeviceModelError, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDeviceSerialError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblVehicleModelError, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblVehicleLicenseError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblVehicleModel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtVehicleModel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(68, 68, 68))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblBank)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtBank, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLicenseNo)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblVehicleLicense)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblDeviceModel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtDeviceModel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblLinkedIn)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtLinkedIn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(57, 57, 57)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDeviceNo)
                                            .addComponent(lblIP)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblCode)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDeviceNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLicenseNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVehicleLicense, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddrError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblAddr)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAddr))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblAgeError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblName)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblAge)
                                            .addComponent(lblZip)
                                            .addComponent(lblState))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtZip)
                                                .addComponent(txtState, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(lblNameError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblZipError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblStateError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCity)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtCity)
                                            .addComponent(txtCountry, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDob)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(lblDobError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCityError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCountryError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPhone)
                            .addComponent(lblMail, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSSN)
                            .addComponent(lblFax, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFax, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSSN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblMedicalRecordError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMailError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPhoneError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMedicalRecord)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMedicalRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHealthPlan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtHealthPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblFaxError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSSNError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblHealthPlanError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBankAccError, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblLicenseError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCode1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUpload)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblCodeError, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblCreateTitle)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLName)
                    .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDob, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgeError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDobError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAddrError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity)
                    .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblZip))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZipError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCityError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblState)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStateError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCountryError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFax, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhoneError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFaxError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMailError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSSNError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMedicalRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMedicalRecord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHealthPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHealthPlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMedicalRecordError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHealthPlanError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBank, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLicenseNo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLicenseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBankAccError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLicenseError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVehicleModel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVehicleModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVehicleLicense, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVehicleLicense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVehicleModelError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVehicleLicenseError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeviceModel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeviceModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDeviceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeviceNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeviceModelError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDeviceSerialError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLinkedIn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLinkedIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLinkedInError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIPError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCodeError, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCode1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpload)
                    .addComponent(lblPath, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDeviceModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeviceModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeviceModelActionPerformed

    private void txtVehicleLicenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVehicleLicenseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVehicleLicenseActionPerformed

    private void txtDeviceNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeviceNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeviceNoActionPerformed

    private void txtLinkedInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLinkedInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLinkedInActionPerformed

    private void txtIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIPActionPerformed

    private void txtCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        //Personal Details
        new_profile.setName(txtName.getText());
        new_profile.setLname(txtLName.getText());
        new_profile.setAge(Integer.parseInt(txtAge.getText()));
        new_profile.setAddr(txtAddr.getText());
        new_profile.setDob(txtDob.getText());
        new_profile.setZip(Integer.parseInt(txtZip.getText()));
        new_profile.setCity(txtCity.getText());
        new_profile.setState(txtState.getText());
        new_profile.setCountry(txtCountry.getText());
        


        
        //Data
        new_profile.setPh_no(Long.parseLong(txtPhone.getText()));
        new_profile.setFax(Integer.parseInt(txtFax.getText()));
        new_profile.setEmail(txtMail.getText());
        new_profile.setSsn(txtSSN.getText());
        new_profile.setMed_record_no(Long.parseLong(txtMedicalRecord.getText()));
        new_profile.setHealth_plan_benef_no(Long.parseLong(txtHealthPlan.getText()));
        new_profile.setBank_acc_no(Long.parseLong(txtBank.getText()));
        new_profile.setLicense_no(Long.parseLong(txtLicenseNo.getText()));
        new_profile.setVehicle_model(txtVehicleModel.getText());
        new_profile.setVehicle_no(txtVehicleLicense.getText());
        new_profile.setDevice_model(txtDeviceModel.getText());
        new_profile.setDevice_no(Long.parseLong(txtDeviceNo.getText()));
        new_profile.setLinkedIn(txtLinkedIn.getText());
        new_profile.setIp_addr(txtIP.getText());
        new_profile.setId(Integer.parseInt(txtCode.getText()));
        
        JOptionPane.showMessageDialog(this, "Profile created and saved successfully");
        
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        File profile_File = fileChooser.getSelectedFile();
        ImageIcon profile_pic = new ImageIcon(profile_File.getPath());
        new_profile.setProfile_pic(profile_pic);
        lblPath.setText("profile pic uploaded");
    }//GEN-LAST:event_btnUploadActionPerformed

    private void txtPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPhoneFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate a 9- digit mobile number that starts with 7-9
        Pattern pat = Pattern.compile("^[7-9][0-9]{9}$");
        Matcher mat = pat.matcher(txtPhone.getText());
        if(!mat.matches()){
            lblPhoneError.setText("Invalid Phone number (Must be 10 digits and start with 7-9)!");
            txtPhone.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblPhoneError.setText("");
        }
        
    }//GEN-LAST:event_txtPhoneFocusLost

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtPhoneActionPerformed

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        // TODO add your handling code here:
        
        //Regular Expression to validate alphabet only entry for name field
        Pattern pat = Pattern.compile("^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$");
        Matcher mat = pat.matcher(txtName.getText());
        if(!mat.matches()){
            lblNameError.setText("Invalid First Name (Must only contain alphabets)");
            txtName.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblNameError.setText("");
        }
    }//GEN-LAST:event_txtNameFocusLost

    private void txtCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodeFocusLost
        // TODO add your handling code here:
        
        //Regular expression to validate 4-digit numeric entry for code/id
        Pattern pat = Pattern.compile("^[0-9]{4}$");
        Matcher mat = pat.matcher(txtCode.getText());
        if(!mat.matches()){
            lblCodeError.setText("Invalid Code [Must be 4 digit entry]!");
            txtCode.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblCodeError.setText("");
        }
    }//GEN-LAST:event_txtCodeFocusLost

    private void txtDeviceNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDeviceNoFocusLost
        // TODO add your handling code here:
        
        // Regular expression to validate 8-digit numeric entry for device serial number
        Pattern pat = Pattern.compile("^[0-9]{8}$");
        Matcher mat = pat.matcher(txtDeviceNo.getText());
        if(!mat.matches()){
            lblDeviceSerialError.setText("Invalid Device Serial Number [Must be 8 digit entry]!");
            txtDeviceNo.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblDeviceSerialError.setText("");
        }
    }//GEN-LAST:event_txtDeviceNoFocusLost

    private void txtSSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSSNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSSNActionPerformed

    private void txtSSNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSSNFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate SSN entry where first 3 digits or area code cannot be 666,000 or between 900 and 999
        Pattern pat = Pattern.compile("^(?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4}$");
        Matcher mat = pat.matcher(txtSSN.getText());
        if(!mat.matches()){
            lblSSNError.setText("Invalid Social Security Number!");
            txtSSN.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblSSNError.setText("");
        }
    }//GEN-LAST:event_txtSSNFocusLost

    private void txtFaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFaxFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate 9-digit fax number 
        Pattern pat = Pattern.compile("^[0-9]{9}$");
        Matcher mat = pat.matcher(txtFax.getText());
        if(!mat.matches()){
            lblFaxError.setText("Invalid Fax Number [Must be 9 digits]!");
            txtFax.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblFaxError.setText("");
        }
    }//GEN-LAST:event_txtFaxFocusLost

    private void txtMailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMailFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate email address 
        Pattern pat = Pattern.compile("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$");
        Matcher mat = pat.matcher(txtMail.getText());
        if(!mat.matches()){
            lblMailError.setText("Invalid Email ID [eg: xyz@gmail.com]");
            txtMail.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblMailError.setText("");
        }
    }//GEN-LAST:event_txtMailFocusLost

    private void txtBankFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBankFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate a 10 digit bank account number (numeric entry)
        Pattern pat = Pattern.compile("^[0-9]{10}");
        Matcher mat = pat.matcher(txtBank.getText());
        if(!mat.matches()){
            lblBankAccError.setText("Invalid Bank account number [Must be 10 digits]");
            txtBank.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblBankAccError.setText("");
        }
    }//GEN-LAST:event_txtBankFocusLost

    private void txtIPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIPFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate IP Address entry 
        Pattern pat = Pattern.compile("\\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\.|$)){4}\\b");
        Matcher mat = pat.matcher(txtIP.getText());
        if(!mat.matches()){
            lblIPError.setText("Invalid IP Address");
            txtIP.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblIPError.setText("");
        }
    }//GEN-LAST:event_txtIPFocusLost

    private void txtDobFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDobFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate date of birth entry in mm/dd/yyyy format
        Pattern pat = Pattern.compile("^(1[0-2]|0?[1-9])/(3[01]|[12][0-9]|0?[1-9])/(?:[0-9]{2})?[0-9]{2}$");
        Matcher mat = pat.matcher(txtDob.getText());
        if(!mat.matches()){
            lblDobError.setText("Invalid Date [Format:mm/dd/yyyy]");
            txtDob.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblDobError.setText("");
        }
        
            
        
        
    }//GEN-LAST:event_txtDobFocusLost

    private void txtMedicalRecordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMedicalRecordFocusLost
        // TODO add your handling code here:
        
        //Regular Expression to validate 5- digit medical record entry (numeric) 
        Pattern pat = Pattern.compile("^[0-9]{5}");
        Matcher mat = pat.matcher(txtMedicalRecord.getText());
        if(!mat.matches()){
            lblMedicalRecordError.setText("Invalid Medical Record Number [Must be 5 digit Number]");
            txtMedicalRecord.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblMedicalRecordError.setText("");
        }
    }//GEN-LAST:event_txtMedicalRecordFocusLost

    private void txtHealthPlanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHealthPlanFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate 6-digit Health Plan Beneficiary number entry (numeric)
        Pattern pat = Pattern.compile("^[0-9]{6}");
        Matcher mat = pat.matcher(txtHealthPlan.getText());
        if(!mat.matches()){
            lblHealthPlanError.setText("Invalid Health Plan Beneficiary Number [Must be 6 digit Number]");
            txtHealthPlan.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblHealthPlanError.setText("");
        }
    }//GEN-LAST:event_txtHealthPlanFocusLost

    private void txtLicenseNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLicenseNoFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate a 9-digit certificate/license number entry
        Pattern pat = Pattern.compile("^[0-9]{9}");
        Matcher mat = pat.matcher(txtLicenseNo.getText());
        if(!mat.matches()){
            lblLicenseError.setText("Invalid License Number [Must be a 9 digit Number]");
            txtLicenseNo.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblLicenseError.setText("");
        }
    }//GEN-LAST:event_txtLicenseNoFocusLost

    private void txtLNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLNameActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountryActionPerformed

    private void txtLNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLNameFocusLost
        // TODO add your handling code here:
        
        //Regular Expression to validate last name entry (only alphabetic input)
        Pattern pat = Pattern.compile("^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$");
        Matcher mat = pat.matcher(txtLName.getText());
        if(!mat.matches()){
            lblLNameError.setText("Invalid Last Name (Must only contain alphabets)");
            txtLName.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblLNameError.setText("");
        }
    }//GEN-LAST:event_txtLNameFocusLost

    private void txtAgeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgeFocusLost
        // TODO add your handling code here:
       
        //Regular Expression to validate numeric entry upto 150 for age
        Pattern pat = Pattern.compile("^150|[1-9]?\\d$");
        Matcher mat = pat.matcher(txtAge.getText());
        if(!mat.matches()){
            lblAgeError.setText("Invalid Age [Must be a numeric entry - 3 digit max.]");
            txtAge.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblAgeError.setText("");
        }

    }//GEN-LAST:event_txtAgeFocusLost

    private void txtZipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtZipFocusLost
        // TODO add your handling code here:
        
        //Regular Expression to validate a 5-digit zip code entry for address
        Pattern pat = Pattern.compile("^[0-9]{5}");
        Matcher mat = pat.matcher(txtZip.getText());
        if(!mat.matches()){
            lblZipError.setText("Invalid Zip code [Must be a 5 digit Number]");
            txtZip.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblZipError.setText("");
        }
    }//GEN-LAST:event_txtZipFocusLost

    private void txtCityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCityFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate alphabetic entry for city name
        Pattern pat = Pattern.compile("^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$");
        Matcher mat = pat.matcher(txtCity.getText());
        if(!mat.matches()){
            lblCityError.setText("Invalid City Name (Must only contain alphabets)");
            txtCity.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblCityError.setText("");
        }
        
    }//GEN-LAST:event_txtCityFocusLost

    private void txtStateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStateFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate alphabetic entry for State name
        Pattern pat = Pattern.compile("^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$");
        Matcher mat = pat.matcher(txtState.getText());
        if(!mat.matches()){
            lblStateError.setText("Invalid State Name (Must only contain alphabets)");
            txtState.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblStateError.setText("");
        }
    }//GEN-LAST:event_txtStateFocusLost

    private void txtCountryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCountryFocusLost
        // TODO add your handling code here:
        
        // Regular Expression to validate alphabetic entry for country name
        Pattern pat = Pattern.compile("^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$");
        Matcher mat = pat.matcher(txtCountry.getText());
        if(!mat.matches()){
            lblCountryError.setText("Invalid Country Name (Must only contain alphabets)");
            txtCountry.setText("");
            btnSave.setEnabled(false);
        }
        else{
            btnSave.setEnabled(true);
            lblCountryError.setText("");
        }
    }//GEN-LAST:event_txtCountryFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpload;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblAddr;
    private javax.swing.JLabel lblAddrError;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAgeError;
    private javax.swing.JLabel lblBank;
    private javax.swing.JLabel lblBankAccError;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCityError;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblCode1;
    private javax.swing.JLabel lblCodeError;
    private javax.swing.JLabel lblCountryError;
    private javax.swing.JLabel lblCreateTitle;
    private javax.swing.JLabel lblDeviceModel;
    private javax.swing.JLabel lblDeviceModelError;
    private javax.swing.JLabel lblDeviceNo;
    private javax.swing.JLabel lblDeviceSerialError;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblDobError;
    private javax.swing.JLabel lblFax;
    private javax.swing.JLabel lblFaxError;
    private javax.swing.JLabel lblHealthPlan;
    private javax.swing.JLabel lblHealthPlanError;
    private javax.swing.JLabel lblIP;
    private javax.swing.JLabel lblIPError;
    private javax.swing.JLabel lblLName;
    private javax.swing.JLabel lblLNameError;
    private javax.swing.JLabel lblLicenseError;
    private javax.swing.JLabel lblLicenseNo;
    private javax.swing.JLabel lblLinkedIn;
    private javax.swing.JLabel lblLinkedInError;
    private javax.swing.JLabel lblMail;
    private javax.swing.JLabel lblMailError;
    private javax.swing.JLabel lblMedicalRecord;
    private javax.swing.JLabel lblMedicalRecordError;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameError;
    private javax.swing.JLabel lblNameError4;
    private javax.swing.JLabel lblPath;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPhoneError;
    private javax.swing.JLabel lblSSN;
    private javax.swing.JLabel lblSSNError;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStateError;
    private javax.swing.JLabel lblVehicleLicense;
    private javax.swing.JLabel lblVehicleLicenseError;
    private javax.swing.JLabel lblVehicleModel;
    private javax.swing.JLabel lblVehicleModelError;
    private javax.swing.JLabel lblZip;
    private javax.swing.JLabel lblZipError;
    private javax.swing.JTextField txtAddr;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBank;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtDeviceModel;
    private javax.swing.JTextField txtDeviceNo;
    private javax.swing.JTextField txtDob;
    private javax.swing.JTextField txtFax;
    private javax.swing.JTextField txtHealthPlan;
    private javax.swing.JTextField txtIP;
    private javax.swing.JTextField txtLName;
    private javax.swing.JTextField txtLicenseNo;
    private javax.swing.JTextField txtLinkedIn;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtMedicalRecord;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtVehicleLicense;
    private javax.swing.JTextField txtVehicleModel;
    private javax.swing.JTextField txtZip;
    // End of variables declaration//GEN-END:variables
}
