/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

//Import Ecosystem
import Business.EcoSystem;

//Import company
import Business.Company.Company;

//Import product
import Business.Company.Products;

//Import organization
import Business.Organization;

//Import useraccount
import Business.UserAccount.UserAccount;

//import cardLayout
import java.awt.CardLayout;

//import JOptionPane
import javax.swing.JOptionPane;

//Import JPanel 
import javax.swing.JPanel;

//Import Table Model
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author merwinroy
 */
public class MenuManagementJPanel extends javax.swing.JPanel 
{

   //JPanel container object 
   JPanel container;
   
   //Ecosystem object
   EcoSystem ecoSystem;
   
   //Company object
   Company company;
   
   //Organization object
   Organization organization;
   
   //UserAccount object
   UserAccount account;
   
   
    public MenuManagementJPanel(JPanel container,EcoSystem ecoSystem,Company company,Organization organization,UserAccount account) 
    {
        //Initialize components
        initComponents();
        
        this.container=container;
        
        this.organization=organization;
        
        this.ecoSystem=ecoSystem;
        
        this.company=company;
        
        this.account=account;
        
        populateTable();
    }

    public void populateTable()
    {
        //Table Model object created successfully 
        DefaultTableModel tableModel = (DefaultTableModel) tblItems.getModel();
        
        //Set row count of tablemodel to 0
        tableModel.setRowCount(0);
        
        //For loop to iterate through product list 
        for(Products product:company.getProductsList()) 
        {
            Object row[] = new Object[2];
            
            row[0] = product;
            
            row[1] = product.getProductPrice();
            
            //Add row to table model after every iteration
            tableModel.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMenuTitle = new javax.swing.JLabel();
        lblItemName = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtUpdatePrice = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        lblMenuTitle.setBackground(new java.awt.Color(102, 102, 255));
        lblMenuTitle.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblMenuTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMenuTitle.setText("MENU");
        lblMenuTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255), 3));

        lblItemName.setText("Item Name : ");

        lblPrice.setText("Item Price : ");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Item");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tblItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblItems);

        btnUpdate.setText("Update Price");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBack.setText(" Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblMenuTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 132, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUpdatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(lblItemName)
                            .addGap(18, 18, 18)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(115, 115, 115))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblMenuTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblItemName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(txtUpdatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        //Selected roe from table
        int selectedRow = tblItems.getSelectedRow();
        
        //Prompt error if row is not selected from table
        if (selectedRow < 0) 
        {
            
            JOptionPane.showMessageDialog(null, "Please select a row from table to proceed!");
            
            return;
        }
        else
        {
            //Selcted product object from table row
            Products pro = (Products)tblItems.getValueAt(selectedRow, 0);
            
            //Set product price of object
            pro.setProductPrice(Integer.parseInt(txtUpdatePrice.getText()));
            
            //Prompt successful update
            JOptionPane.showMessageDialog(null, "Item has been updated successfully");
            
            populateTable();
        } 
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        
        //For loop to iterate through product list
        for(Products product:company.getProductsList()) 
        {
            //Prompt message if product already exists and no addition is required
            if(txtName.getText().equals(product.getProductName()))
            {
                //MessageDialog
                JOptionPane.showMessageDialog(null, "Item already exists");
                return;
            } 
        }
        
        //Prompt message if item name is empty
        if(txtName.getText().equals("")||txtName.getText()==null)
        {
            //MessageDialog
            JOptionPane.showMessageDialog(null, "Item can't be empty");
            return;
        }
        
        //For loop to iterate through company list
        for(Company c: ecoSystem.getCompanyDirectory().getCompanyList())
        {
            //Check enterprise name
            if(c.getName().equalsIgnoreCase(company.getName()))
            {
                //product object created
                Products product =company.newMenu();
                
                //set product name
                product.setProductName(txtName.getText());
                
                //set product price
                product.setProductPrice(Integer.parseInt(txtPrice.getText()));
                
                populateTable();
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        //Selected row from table
        int selectedRow = tblItems.getSelectedRow();
        
        //prompt error message if no row is selected
        if (selectedRow < 0) 
        {
            //MessageDialog
            JOptionPane.showMessageDialog(null, "Please select a row from table to proceed!");
            return;
        }
        else
        {
            //Product object
            Products product = (Products)tblItems.getValueAt(selectedRow, 0);
            
            //delete Product from company
            company.deleteProduct(product);
            
            //MessageDialog to prompt successful deletion of item
            JOptionPane.showMessageDialog(null, "Item has been deleted successfully");
            
            
            populateTable();
        } 
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        //Current container removed from layout
        container.remove(this);
        
        //CardLayout object created
        CardLayout cardLayout = (CardLayout) container.getLayout();
        
        //previous layout loaded
        cardLayout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblItemName;
    private javax.swing.JLabel lblMenuTitle;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JTable tblItems;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtUpdatePrice;
    // End of variables declaration//GEN-END:variables
}
